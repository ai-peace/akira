generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id        Int    @id @default(autoincrement()) @map("id")
  uniqueKey String @map("unique_key")

  title      String? @map("title")
  mdxContent String? @map("mdx_content") @db.Text

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  promptGroups PromptGroup[]

  @@unique([uniqueKey])
  @@index([uniqueKey])
  @@map("chats")
}

model PromptGroup {
  id        Int    @id @default(autoincrement()) @map("id")
  uniqueKey String @map("unique_key")

  chatId Int @map("chat_id")

  question String @map("question") @db.Text

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  chat    Chat     @relation(fields: [chatId], references: [id])
  prompts Prompt[]

  @@unique([uniqueKey])
  @@index([uniqueKey])
  @@index([chatId])
  @@map("prompt_groups")
}

model Prompt {
  id        Int    @id @default(autoincrement()) @map("id")
  uniqueKey String @map("unique_key")

  promptGroupId Int?

  order Int? @default(autoincrement()) @map("order")

  result     Json?   @map("result")
  resultType String? @map("result_type")

  llmStatus         LlmStatus @default(IDLE) @map("llm_status")
  llmStatusChangeAt DateTime? @default(now()) @map("llm_status_change_at")
  llmError          String?   @map("llm_error") @db.Text

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  promptGroup PromptGroup? @relation(fields: [promptGroupId], references: [id])

  @@unique([uniqueKey])
  @@index([uniqueKey])
  @@index([promptGroupId])
  @@index([promptGroupId, order])
  @@map("prompts")
}

enum LlmStatus {
  IDLE
  PROCESSING
  SUCCESS
  FAILED
}
