/* tslint:disable */
/* eslint-disable */
/**
 * LW RAG API
 * RAGシステムのAPI
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreatePrompt,
  HTTPValidationError,
} from '../models';
import {
    CreatePromptFromJSON,
    CreatePromptToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models';

export interface CreatePromptPromptPostRequest {
    createPrompt: CreatePrompt;
}

/**
 * PromptApi - interface
 * 
 * @export
 * @interface PromptApiInterface
 */
export interface PromptApiInterface {
    /**
     * プロンプトを作成。  Args:     prompt: 作成するプロンプトの情報     csrf_token: CSRFトークン（セキュリティチェックに使用）  Returns:     dict: 作成されたプロンプトの情報
     * @summary Create Prompt
     * @param {CreatePrompt} createPrompt 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromptApiInterface
     */
    createPromptPromptPostRaw(requestParameters: CreatePromptPromptPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;

    /**
     * プロンプトを作成。  Args:     prompt: 作成するプロンプトの情報     csrf_token: CSRFトークン（セキュリティチェックに使用）  Returns:     dict: 作成されたプロンプトの情報
     * Create Prompt
     */
    createPromptPromptPost(requestParameters: CreatePromptPromptPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;

}

/**
 * 
 */
export class PromptApi extends runtime.BaseAPI implements PromptApiInterface {

    /**
     * プロンプトを作成。  Args:     prompt: 作成するプロンプトの情報     csrf_token: CSRFトークン（セキュリティチェックに使用）  Returns:     dict: 作成されたプロンプトの情報
     * Create Prompt
     */
    async createPromptPromptPostRaw(requestParameters: CreatePromptPromptPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.createPrompt === null || requestParameters.createPrompt === undefined) {
            throw new runtime.RequiredError('createPrompt','Required parameter requestParameters.createPrompt was null or undefined when calling createPromptPromptPost.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-CSRF-Token"] = this.configuration.apiKey("X-CSRF-Token"); // APIKeyHeader authentication
        }

        const response = await this.request({
            path: `/prompt/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreatePromptToJSON(requestParameters.createPrompt),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * プロンプトを作成。  Args:     prompt: 作成するプロンプトの情報     csrf_token: CSRFトークン（セキュリティチェックに使用）  Returns:     dict: 作成されたプロンプトの情報
     * Create Prompt
     */
    async createPromptPromptPost(requestParameters: CreatePromptPromptPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.createPromptPromptPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
