/* tslint:disable */
/* eslint-disable */
/**
 * LW RAG API
 * RAGシステムのAPI
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * プロンプト作成のリクエストモデル。
 * @export
 * @interface CreatePrompt
 */
export interface CreatePrompt {
    /**
     * コレクション名（英数字、ハイフン、アンダースコアのみ許可）
     * @type {any}
     * @memberof CreatePrompt
     */
    collectionName: any | null;
    /**
     * プロンプトテキスト（HTMLタグは使用不可）
     * @type {any}
     * @memberof CreatePrompt
     */
    prompt: any | null;
    /**
     * ライタープロンプト設定
     * @type {any}
     * @memberof CreatePrompt
     */
    config?: any | null;
}

/**
 * Check if a given object implements the CreatePrompt interface.
 */
export function instanceOfCreatePrompt(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "collectionName" in value;
    isInstance = isInstance && "prompt" in value;

    return isInstance;
}

export function CreatePromptFromJSON(json: any): CreatePrompt {
    return CreatePromptFromJSONTyped(json, false);
}

export function CreatePromptFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePrompt {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collectionName': json['collection_name'],
        'prompt': json['prompt'],
        'config': !exists(json, 'config') ? undefined : json['config'],
    };
}

export function CreatePromptToJSON(value?: CreatePrompt | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collection_name': value.collectionName,
        'prompt': value.prompt,
        'config': value.config,
    };
}

